<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:zzw="http://www.asiainfo.com/schema/service" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans   
       http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
       http://www.springframework.org/schema/util
       http://www.springframework.org/schema/util/spring-util-4.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-4.0.xsd
       http://www.asiainfo.com/schema/service
       http://www.asiainfo.com/schema/service.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
       ">

	<context:component-scan base-package="com.asiainfo.controller"></context:component-scan>
	<!-- 配置视图解析器，将逻辑视图名拼上前后缀去指定真实视图文件(视图对象) -->
	<!-- 如果jsp里面使用了JSTL的国际化标签<fmt:message>则需要使用JstlView视图类来替换默认的InternalResourceView -->
	<!-- InternalResourceViewResolver的优先级最低 -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		p:prefix="/WEB-INF/views/"
		p:suffix=".jsp"></bean>
	
	<!-- 注解驱动，作用：1、注册默认的HandlerMapping和HandlerAdapter，如若配置有用户自定义的相关组件，则会覆盖默认的；2、注册一个默认的ConversionService来满足大多数的类型转换，如果要自定义一个ConversionService，需要用conversion-service属性来指定；3、注册一个默认的Validator来进行数据校验 -->
<!-- 	<mvc:annotation-driven conversion-service="myConversionService"></mvc:annotation-driven> -->
	<mvc:annotation-driven></mvc:annotation-driven>
	
<!-- 	<bean id="myConversionService" class="org.springframework.context.support.ConversionServiceFactoryBean"> -->
<!-- 		<property name="converters"> -->
<!-- 			<list> -->
<!-- 				<bean class="com.asiainfo.MyConversionService"></bean> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
	
	<!-- 配置国际化资源 -->
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>i18n/messages</value>
				<value>i18n/content</value>
			</list>
		</property>
	</bean>
	
	<!-- 配置另一种视图解析器BeanNameViewResolver，然后设置优先级，一个配置文件里面可以配置多个视图解析器 -->
<!-- 	<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="10"></bean>  -->
	<!-- 配置相应的视图。注意：这里的bean id必须要和controller返回的逻辑视图名一致 -->
	<!-- excel、pdf、xml、json视图对应的解析器都是BeanNameViewResolver -->
<!-- 	<bean id="userListExcelView" class="com.asiainfo.UserListExcelView"></bean> -->
<!-- 	<bean id="userListPDFView" class="com.asiainfo.UserListPDFView"></bean> -->
<!-- 	<bean id="userListXMLView" class="org.springframework.web.servlet.view.xml.MarshallingView" p:modelKey="userList" p:marshaller-ref="xStreamMarshaller"></bean> -->
<!-- 	<bean id="xStreamMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller"> -->
<!-- 		<property name="streamDriver"> -->
<!-- 			<bean class="com.thoughtworks.xstream.io.xml.StaxDriver"></bean> -->
<!-- 		</property> -->
<!-- 		<property name="annotatedClasses"> -->
<!-- 			<list> -->
<!-- 				<value>com.asiainfo.entity.User</value> -->
<!-- 			</list> -->
<!-- 		</property> -->
<!-- 	</bean> -->
<!-- 	<bean id="userListJSONView" class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" p:modelKey="userList"></bean> -->

<!-- 	<bean class="org.springframework.web.servlet.view.XmlViewResolver" p:order="20" p:location="WEB-INF/views/smart-views.xml"></bean> -->

<!-- 	<bean id="contentNegotiationManager" -->
<!--           class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean" -->
<!--           p:ignoreAcceptHeader="true" -->
<!--           p:favorPathExtension="false" -->
<!--           p:favorParameter="true" -->
<!--           p:parameterName="format" -->
<!--           p:defaultContentType="text/html"> -->
<!--         <property name="mediaTypes"> -->
<!--             <value> -->
<!--                 html=text/html -->
<!--                 xml=application/xml -->
<!--                 json=application/json -->
<!--             </value> -->
<!--         </property> -->
<!--     </bean> -->
    <!-- 协商多种视图解析器 -->
<!--     <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver" p:order="0"> -->
<!--         <property name="contentNegotiationManager" ref="contentNegotiationManager"/> -->
<!--         <property name="defaultViews"> -->
<!--             <list> -->
<!--                 <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" -->
<!--                       p:modelKeys="userList"/> -->
<!--                 <bean class="org.springframework.web.servlet.view.xml.MarshallingView" -->
<!--                       p:modelKey="userList" p:marshaller-ref="xStreamMarshaller"/> -->
<!--             </list> -->
<!--         </property> -->
<!--     </bean> -->
    
    <!-- 文件上传配置 -->
<!--     <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" p:defaultEncoding="UTF-8" p:maxUploadSize="2282992" p:uploadTempDir="file:/Users/zhangzhiwang/Desktop/upload_tmp_dir"></bean> -->
    
    <!-- 将DispatcherServlet的映射路径设为“/”的前提是要配置下面两个之一 -->
    <mvc:default-servlet-handler/>
    <mvc:resources mapping="/resources/**" location="/,classpath:/META-INF/**"/>
    
    <bean id="restTemplate" class="org.springframework.web.client.RestTemplate">
    	<property name="messageConverters">
    		<list>
    			<bean class="org.springframework.http.converter.StringHttpMessageConverter"></bean>
    			<bean class="org.springframework.http.converter.FormHttpMessageConverter"></bean>
    		</list>
    	</property>
    </bean>
</beans>